name: Test, Build, and Deploy

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DB_HOST: localhost
      DB_PORT: :5432
      DB_NAME: recruiter-test-db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_SSL: disable
      SERVER_PORT: 3000
      CLIENT_BASE_URL: http://localhost:5173
      CLIENT_RESET_PASSWORD_URL: ${{ vars.CLIENT_RESET_PASSWORD_URL }}
      EMAIL_HOST: ${{ vars.EMAIL_HOST }}
      EMAIL_PORT: ${{ vars.EMAIL_PORT }}
      EMAIL_SERVICE_DEBUG: true
      EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      GOOGLE_CLOUD_BUCKET_NAME: ${{ secrets.GOOGLE_CLOUD_BUCKET_NAME }}
      GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
      JWT_EXPIRATION_MS: ${{ vars.JWT_EXPIRATION_MS }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      RESET_PASSWORD_TOKEN_EXPIRATION_SECONDS: ${{ vars.RESET_PASSWORD_TOKEN_EXPIRATION_SECONDS }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: recruiter-test-db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4.1.1

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build with Maven and skip tests
        working-directory: server
        run: mvn -B package --file pom.xml -DskipTests

      - name: Install client dependencies
        working-directory: client
        run: npm ci

      - name: Type check client
        working-directory: client
        run: npm run typecheck

      - name: Lint client
        working-directory: client
        run: npm run lint

      - name: Install Playwright Browsers
        working-directory: client
        run: npx playwright install --with-deps chromium

      - name: Run server tests
        working-directory: server
        run: mvn -B test

      - name: Run server
        working-directory: server/target
        run: java -jar recruiter-1.0-SNAPSHOT.jar &

      - name: Build front end for E2E tests
        working-directory: client
        run: npm run build
        env:
          VITE_API_ORIGIN: http://localhost:3000
          VITE_API_PATH: /api/v1

      - name: Health probe
        uses: Jtalk/url-health-check-action@v4
        with:
          max-attempts: 5
          retry-delay: 5s
          url: http://localhost:3000/actuator/health

      - name: Readiness probe
        uses: Jtalk/url-health-check-action@v4
        with:
          max-attempts: 5
          retry-delay: 5s
          url: http://localhost:3000/actuator/info

      # - name: Test client E2E
      #   working-directory: client
      #   run: npm run test:e2e

      - uses: actions/upload-artifact@v4.3.1
        if: always()
        with:
          name: playwright-report
          path: client/playwright-report/
          retention-days: 7
